; The harddrive image file
; Contains the boot sector and a simple filesystem with the kernel and some apps
%include "asm/sector.asm"

; filesystem header
fs_header:
.signature:
    db "REDOXFS",0
.version:
    dq 1
.free_space:
    dq (fs_free_space - boot)/512   ; "boot" is at the beginning of sector.asm - this calculates the number of sectors taken
    dq (fs_free_space.end - fs_free_space)  ; 16 777 216 (16 * 1M)
.padding:
    align 256, db 0
.extents:   ; node extents
    dq (fs_root_node_list - boot)/512   ; sectors taken by startup scripts + kernel + fonts
    dq (fs_root_node_list.end - fs_root_node_list)  ; sectors taken by root node list

    align 512, db 0
.end:

; include the startup scripts
%ifdef ARCH_i386
    %include "asm/startup-i386.asm"
%endif

%ifdef ARCH_x86_64
    %include "asm/startup-x86_64.asm"
%endif

times (0xC000-0x1000)-0x7C00-($-$$) db 0

; include the kernel
kernel_file:
  incbin "kernel.bin"
  align 512, db 0

; include fonts
.font:
  incbin "ui/unifont.font"
  align 512, db 0
.end:

; generate root nodes
fs_root_node_list:
; this macro will generate filesystem entries for the files
%macro file 2+ 
    fs_node.%1:
    .name:
        db %2,0 ; file name

        align 256, db 0

    .extents:
        dq (fs_data.%1 - boot)/512  ; first sector of the file
        dq (fs_data.%1.end - fs_data.%1)   ; file size

        align 512, db 0 ; align to sector size
    .end:
%endmacro

; filesystem.gen is generated by make
; it contains the list of all the files that are supposed to be included in the disk image
; this actually calls the macro defined above
%include "filesystem.gen"

; undefine macro
%unmacro file 2+
fs_root_node_list.end:

; new macro for data inclusion
%macro file 2+
fs_data.%1:
    incbin %2   ; include the binary data from the file
.end:
    align 512, db 0 ; sector alignment
%endmacro

; include the same file list again - this time it will include the data
%include "filesystem.gen"

%unmacro file 2+

; sector alignment again
    align 512, db 0

; 16 MB of free space
fs_free_space:
    times 16 * 1024 * 1024 db 0
.end:
